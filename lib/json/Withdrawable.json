{
  "contractName": "Withdrawable",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "alerter",
          "type": "address"
        }
      ],
      "name": "removeAlerter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOperators",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newAlerter",
          "type": "address"
        }
      ],
      "name": "addAlerter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "transferAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "transferAdminQuickly",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAlerters",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "addOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "removeOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "sendTo",
          "type": "address"
        }
      ],
      "name": "TokenWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "sendTo",
          "type": "address"
        }
      ],
      "name": "EtherWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "pendingAdmin",
          "type": "address"
        }
      ],
      "name": "TransferAdminPending",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "previousAdmin",
          "type": "address"
        }
      ],
      "name": "AdminClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newAlerter",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "isAdd",
          "type": "bool"
        }
      ],
      "name": "AlerterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newOperator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "isAdd",
          "type": "bool"
        }
      ],
      "name": "OperatorAdded",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "sendTo",
          "type": "address"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "sendTo",
          "type": "address"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"alerter\",\"type\":\"address\"}],\"name\":\"removeAlerter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOperators\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"sendTo\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAlerter\",\"type\":\"address\"}],\"name\":\"addAlerter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdminQuickly\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAlerters\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"addOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"removeOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"sendTo\",\"type\":\"address\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"sendTo\",\"type\":\"address\"}],\"name\":\"TokenWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"sendTo\",\"type\":\"address\"}],\"name\":\"EtherWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"pendingAdmin\",\"type\":\"address\"}],\"name\":\"TransferAdminPending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAdmin\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"previousAdmin\",\"type\":\"address\"}],\"name\":\"AdminClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAlerter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isAdd\",\"type\":\"bool\"}],\"name\":\"AlerterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newOperator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isAdd\",\"type\":\"bool\"}],\"name\":\"OperatorAdded\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Ilan Doron\",\"methods\":{\"claimAdmin()\":{\"details\":\"Allows the pendingAdmin address to finalize the change admin process.\"},\"transferAdmin(address)\":{\"details\":\"Allows the current admin to set the pendingAdmin address.\",\"params\":{\"newAdmin\":\"The address to transfer ownership to.\"}},\"transferAdminQuickly(address)\":{\"details\":\"Allows the current admin to set the admin in one tx. Useful initial deployment.\",\"params\":{\"newAdmin\":\"The address to transfer ownership to.\"}},\"withdrawEther(uint256,address)\":{\"details\":\"Withdraw Ethers\"},\"withdrawToken(address,uint256,address)\":{\"details\":\"Withdraw all ERC20 compatible tokens\",\"params\":{\"token\":\"ERC20 The address of the token contract\"}}},\"title\":\"Contracts that should be able to recover tokens or ethers\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/iamonuwa/Projects/MyBitFoundation/MyBit-Network.tech/contracts/kyber/Withdrawable.sol\":\"Withdrawable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/iamonuwa/Projects/MyBitFoundation/MyBit-Network.tech/contracts/interfaces/ERC20.sol\":{\"keccak256\":\"0xee3f2cdc5974c80fc0771c03d9c432cb73ff82324a4a685a30dc2ff5e8908b37\",\"urls\":[\"bzzr://9d565e98d23a9e5fb3a0c67e61daff3fbb609ee3dfe5d75cb6f5f1adc417348b\"]},\"/home/iamonuwa/Projects/MyBitFoundation/MyBit-Network.tech/contracts/kyber/PermissionGroups.sol\":{\"keccak256\":\"0xa08235a479f99595250e84ad7abf40bbc6730d69a18019add06ab66bff9b4e1f\",\"urls\":[\"bzzr://fdec75a3bc08b52a4803001db4289cfe0396cc625c0f2d97ae0684a812e81370\"]},\"/home/iamonuwa/Projects/MyBitFoundation/MyBit-Network.tech/contracts/kyber/Withdrawable.sol\":{\"keccak256\":\"0xaa84204a895b75e06a5e43de1e8b8836be3a8cf8c8d3dbfc589621244622588f\",\"urls\":[\"bzzr://daeff34b6a64c3c2bad77aa2f524180c3ee94394f0601e56ae9be64b2855df89\"]}},\"version\":1}",
  "bytecode": "0x608060405260008054600160a060020a03191633179055610c5a806100256000396000f3006080604052600436106100c45763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301a12fd381146100c957806326782247146100ec57806327a099d81461011d5780633ccdbb2814610182578063408ee7fe146101ad57806375829def146101ce57806377f50f97146101ef5780637acc8678146102045780637c423f54146102255780639870d7fe1461023a578063ac8a584a1461025b578063ce56c4541461027c578063f851a440146102a0575b600080fd5b3480156100d557600080fd5b506100ea600160a060020a03600435166102b5565b005b3480156100f857600080fd5b5061010161041e565b60408051600160a060020a039092168252519081900360200190f35b34801561012957600080fd5b5061013261042d565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561016e578181015183820152602001610156565b505050509050019250505060405180910390f35b34801561018e57600080fd5b506100ea600160a060020a036004358116906024359060443516610490565b3480156101b957600080fd5b506100ea600160a060020a03600435166105a9565b3480156101da57600080fd5b506100ea600160a060020a036004351661069f565b3480156101fb57600080fd5b506100ea61072c565b34801561021057600080fd5b506100ea600160a060020a03600435166107b6565b34801561023157600080fd5b50610132610888565b34801561024657600080fd5b506100ea600160a060020a03600435166108e8565b34801561026757600080fd5b506100ea600160a060020a03600435166109de565b34801561028857600080fd5b506100ea600435600160a060020a0360243516610b43565b3480156102ac57600080fd5b50610101610bd8565b60008054600160a060020a031633146102cd57600080fd5b600160a060020a03821660009081526003602052604090205460ff1615156102f457600080fd5b50600160a060020a0381166000908152600360205260408120805460ff191690555b60055481101561041a5781600160a060020a031660058281548110151561033957fe5b600091825260209091200154600160a060020a031614156104125760058054600019810190811061036657fe5b60009182526020909120015460058054600160a060020a03909216918390811061038c57fe5b60009182526020909120018054600160a060020a031916600160a060020a039290921691909117905560058054906103c8906000198301610be7565b5060408051600160a060020a03841681526000602082015281517f5611bf3e417d124f97bf2c788843ea8bb502b66079fbee02158ef30b172cb762929181900390910190a161041a565b600101610316565b5050565b600154600160a060020a031681565b6060600480548060200260200160405190810160405280929190818152602001828054801561048557602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610467575b505050505090505b90565b600054600160a060020a031633146104a757600080fd5b82600160a060020a031663a9059cbb82846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561052357600080fd5b505af1158015610537573d6000803e3d6000fd5b505050506040513d602081101561054d57600080fd5b5051151561055a57600080fd5b60408051600160a060020a0380861682526020820185905283168183015290517f72cb8a894ddb372ceec3d2a7648d86f17d5a15caae0e986c53109b8a9a9385e69181900360600190a1505050565b600054600160a060020a031633146105c057600080fd5b600160a060020a03811660009081526003602052604090205460ff16156105e657600080fd5b6005546032116105f557600080fd5b60408051600160a060020a03831681526001602082015281517f5611bf3e417d124f97bf2c788843ea8bb502b66079fbee02158ef30b172cb762929181900390910190a1600160a060020a03166000818152600360205260408120805460ff191660019081179091556005805491820181559091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018054600160a060020a0319169091179055565b600054600160a060020a031633146106b657600080fd5b600160a060020a03811615156106cb57600080fd5b60015460408051600160a060020a039092168252517f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc409181900360200190a160018054600160a060020a031916600160a060020a0392909216919091179055565b600154600160a060020a0316331461074357600080fd5b60015460005460408051600160a060020a03938416815292909116602083015280517f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed9281900390910190a16001805460008054600160a060020a0319908116600160a060020a03841617909155169055565b600054600160a060020a031633146107cd57600080fd5b600160a060020a03811615156107e257600080fd5b60408051600160a060020a038316815290517f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc409181900360200190a160005460408051600160a060020a038085168252909216602083015280517f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed9281900390910190a160008054600160a060020a031916600160a060020a0392909216919091179055565b6060600580548060200260200160405190810160405280929190818152602001828054801561048557602002820191906000526020600020908154600160a060020a03168152600190910190602001808311610467575050505050905090565b600054600160a060020a031633146108ff57600080fd5b600160a060020a03811660009081526002602052604090205460ff161561092557600080fd5b60045460321161093457600080fd5b60408051600160a060020a03831681526001602082015281517f091a7a4b85135fdd7e8dbc18b12fabe5cc191ea867aa3c2e1a24a102af61d58b929181900390910190a1600160a060020a03166000818152600260205260408120805460ff191660019081179091556004805491820181559091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b018054600160a060020a0319169091179055565b60008054600160a060020a031633146109f657600080fd5b600160a060020a03821660009081526002602052604090205460ff161515610a1d57600080fd5b50600160a060020a0381166000908152600260205260408120805460ff191690555b60045481101561041a5781600160a060020a0316600482815481101515610a6257fe5b600091825260209091200154600160a060020a03161415610b3b57600480546000198101908110610a8f57fe5b60009182526020909120015460048054600160a060020a039092169183908110610ab557fe5b60009182526020909120018054600160a060020a031916600160a060020a0392909216919091179055600480546000190190610af19082610be7565b5060408051600160a060020a03841681526000602082015281517f091a7a4b85135fdd7e8dbc18b12fabe5cc191ea867aa3c2e1a24a102af61d58b929181900390910190a161041a565b600101610a3f565b600054600160a060020a03163314610b5a57600080fd5b604051600160a060020a0382169083156108fc029084906000818181858888f19350505050158015610b90573d6000803e3d6000fd5b5060408051838152600160a060020a038316602082015281517fec47e7ed86c86774d1a72c19f35c639911393fe7c1a34031fdbd260890da90de929181900390910190a15050565b600054600160a060020a031681565b815481835581811115610c0b57600083815260209020610c0b918101908301610c10565b505050565b61048d91905b80821115610c2a5760008155600101610c16565b50905600a165627a7a72305820220c0e62115a5f92d2cd5906a503ec2ad8765950d9856a1a87eaa1d950a361560029",
  "deployedBytecode": "0x6080604052600436106100c45763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301a12fd381146100c957806326782247146100ec57806327a099d81461011d5780633ccdbb2814610182578063408ee7fe146101ad57806375829def146101ce57806377f50f97146101ef5780637acc8678146102045780637c423f54146102255780639870d7fe1461023a578063ac8a584a1461025b578063ce56c4541461027c578063f851a440146102a0575b600080fd5b3480156100d557600080fd5b506100ea600160a060020a03600435166102b5565b005b3480156100f857600080fd5b5061010161041e565b60408051600160a060020a039092168252519081900360200190f35b34801561012957600080fd5b5061013261042d565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561016e578181015183820152602001610156565b505050509050019250505060405180910390f35b34801561018e57600080fd5b506100ea600160a060020a036004358116906024359060443516610490565b3480156101b957600080fd5b506100ea600160a060020a03600435166105a9565b3480156101da57600080fd5b506100ea600160a060020a036004351661069f565b3480156101fb57600080fd5b506100ea61072c565b34801561021057600080fd5b506100ea600160a060020a03600435166107b6565b34801561023157600080fd5b50610132610888565b34801561024657600080fd5b506100ea600160a060020a03600435166108e8565b34801561026757600080fd5b506100ea600160a060020a03600435166109de565b34801561028857600080fd5b506100ea600435600160a060020a0360243516610b43565b3480156102ac57600080fd5b50610101610bd8565b60008054600160a060020a031633146102cd57600080fd5b600160a060020a03821660009081526003602052604090205460ff1615156102f457600080fd5b50600160a060020a0381166000908152600360205260408120805460ff191690555b60055481101561041a5781600160a060020a031660058281548110151561033957fe5b600091825260209091200154600160a060020a031614156104125760058054600019810190811061036657fe5b60009182526020909120015460058054600160a060020a03909216918390811061038c57fe5b60009182526020909120018054600160a060020a031916600160a060020a039290921691909117905560058054906103c8906000198301610be7565b5060408051600160a060020a03841681526000602082015281517f5611bf3e417d124f97bf2c788843ea8bb502b66079fbee02158ef30b172cb762929181900390910190a161041a565b600101610316565b5050565b600154600160a060020a031681565b6060600480548060200260200160405190810160405280929190818152602001828054801561048557602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610467575b505050505090505b90565b600054600160a060020a031633146104a757600080fd5b82600160a060020a031663a9059cbb82846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561052357600080fd5b505af1158015610537573d6000803e3d6000fd5b505050506040513d602081101561054d57600080fd5b5051151561055a57600080fd5b60408051600160a060020a0380861682526020820185905283168183015290517f72cb8a894ddb372ceec3d2a7648d86f17d5a15caae0e986c53109b8a9a9385e69181900360600190a1505050565b600054600160a060020a031633146105c057600080fd5b600160a060020a03811660009081526003602052604090205460ff16156105e657600080fd5b6005546032116105f557600080fd5b60408051600160a060020a03831681526001602082015281517f5611bf3e417d124f97bf2c788843ea8bb502b66079fbee02158ef30b172cb762929181900390910190a1600160a060020a03166000818152600360205260408120805460ff191660019081179091556005805491820181559091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018054600160a060020a0319169091179055565b600054600160a060020a031633146106b657600080fd5b600160a060020a03811615156106cb57600080fd5b60015460408051600160a060020a039092168252517f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc409181900360200190a160018054600160a060020a031916600160a060020a0392909216919091179055565b600154600160a060020a0316331461074357600080fd5b60015460005460408051600160a060020a03938416815292909116602083015280517f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed9281900390910190a16001805460008054600160a060020a0319908116600160a060020a03841617909155169055565b600054600160a060020a031633146107cd57600080fd5b600160a060020a03811615156107e257600080fd5b60408051600160a060020a038316815290517f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc409181900360200190a160005460408051600160a060020a038085168252909216602083015280517f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed9281900390910190a160008054600160a060020a031916600160a060020a0392909216919091179055565b6060600580548060200260200160405190810160405280929190818152602001828054801561048557602002820191906000526020600020908154600160a060020a03168152600190910190602001808311610467575050505050905090565b600054600160a060020a031633146108ff57600080fd5b600160a060020a03811660009081526002602052604090205460ff161561092557600080fd5b60045460321161093457600080fd5b60408051600160a060020a03831681526001602082015281517f091a7a4b85135fdd7e8dbc18b12fabe5cc191ea867aa3c2e1a24a102af61d58b929181900390910190a1600160a060020a03166000818152600260205260408120805460ff191660019081179091556004805491820181559091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b018054600160a060020a0319169091179055565b60008054600160a060020a031633146109f657600080fd5b600160a060020a03821660009081526002602052604090205460ff161515610a1d57600080fd5b50600160a060020a0381166000908152600260205260408120805460ff191690555b60045481101561041a5781600160a060020a0316600482815481101515610a6257fe5b600091825260209091200154600160a060020a03161415610b3b57600480546000198101908110610a8f57fe5b60009182526020909120015460048054600160a060020a039092169183908110610ab557fe5b60009182526020909120018054600160a060020a031916600160a060020a0392909216919091179055600480546000190190610af19082610be7565b5060408051600160a060020a03841681526000602082015281517f091a7a4b85135fdd7e8dbc18b12fabe5cc191ea867aa3c2e1a24a102af61d58b929181900390910190a161041a565b600101610a3f565b600054600160a060020a03163314610b5a57600080fd5b604051600160a060020a0382169083156108fc029084906000818181858888f19350505050158015610b90573d6000803e3d6000fd5b5060408051838152600160a060020a038316602082015281517fec47e7ed86c86774d1a72c19f35c639911393fe7c1a34031fdbd260890da90de929181900390910190a15050565b600054600160a060020a031681565b815481835581811115610c0b57600083815260209020610c0b918101908301610c10565b505050565b61048d91905b80821115610c2a5760008155600101610c16565b50905600a165627a7a72305820220c0e62115a5f92d2cd5906a503ec2ad8765950d9856a1a87eaa1d950a361560029",
  "sourceMap": "321:695:61:-;;;368:5:53;:18;;-1:-1:-1;;;;;;368:18:53;376:10;368:18;;;321:695:61;;;;;;",
  "deployedSourceMap": "321:695:61:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2392:456:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2392:456:53;-1:-1:-1;;;;;2392:456:53;;;;;;;85:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;85:27:53;;;;;;;;-1:-1:-1;;;;;85:27:53;;;;;;;;;;;;;;656:96;;8:9:-1;5:2;;;30:1;27;20:12;5:2;656:96:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;656:96:53;;;;;;;;;;;;;;;;;563:191:61;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;563:191:61;-1:-1:-1;;;;;563:191:61;;;;;;;;;;;;;2080:306:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2080:306:53;-1:-1:-1;;;;;2080:306:53;;;;;1060:188;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1060:188:53;-1:-1:-1;;;;;1060:188:53;;;;;1822:194;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1822:194:53;;;;1423:228;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1423:228:53;-1:-1:-1;;;;;1423:228:53;;;;;758:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;758:94:53;;;;2913:317;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2913:317:53;-1:-1:-1;;;;;2913:317:53;;;;;3236:474;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3236:474:53;-1:-1:-1;;;;;3236:474:53;;;;;859:155:61;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;859:155:61;;;-1:-1:-1;;;;;859:155:61;;;;;59:20:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;59:20:53;;;;2392:456;2537:6;452:5;;-1:-1:-1;;;;;452:5:53;438:10;:19;430:28;;;;;;-1:-1:-1;;;;;2468:17:53;;;;;;:8;:17;;;;;;;;2460:26;;;;;;;;-1:-1:-1;;;;;;2496:17:53;;2516:5;2496:17;;;:8;:17;;;;;:25;;-1:-1:-1;;2496:25:53;;;2532:310;2553:13;:20;2549:24;;2532:310;;;2618:7;-1:-1:-1;;;;;2598:27:53;:13;2612:1;2598:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2598:16:53;:27;2594:238;;;2664:13;2678:20;;-1:-1:-1;;2678:24:53;;;2664:39;;;;;;;;;;;;;;;;2645:13;:16;;-1:-1:-1;;;;;2664:39:53;;;;2659:1;;2645:16;;;;;;;;;;;;;;;:58;;-1:-1:-1;;;;;;2645:58:53;-1:-1:-1;;;;;2645:58:53;;;;;;;;;;2721:13;:22;;;;;-1:-1:-1;;2721:22:53;;;:::i;:::-;-1:-1:-1;2766:28:53;;;-1:-1:-1;;;;;2766:28:53;;;;2788:5;2766:28;;;;;;;;;;;;;;;;;2812:5;;2594:238;2575:3;;2532:310;;;2392:456;;:::o;85:27::-;;;-1:-1:-1;;;;;85:27:53;;:::o;656:96::-;703:9;731:14;724:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;724:21:53;;;;;;;;;;;;;;;;;;;;;;;656:96;;:::o;563:191:61:-;452:5:53;;-1:-1:-1;;;;;452:5:53;438:10;:19;430:28;;;;;;665:5:61;-1:-1:-1;;;;;665:14:61;;680:6;688;665:30;;;;;;;;;;;;;-1:-1:-1;;;;;665:30:61;-1:-1:-1;;;;;665:30:61;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;665:30:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;665:30:61;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;665:30:61;657:39;;;;;;;;711:36;;;-1:-1:-1;;;;;711:36:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;563:191;;;:::o;2080:306:53:-;452:5;;-1:-1:-1;;;;;452:5:53;438:10;:19;430:28;;;;;;-1:-1:-1;;;;;2156:20:53;;;;;;:8;:20;;;;;;;;2155:21;2147:30;;;;;;2218:13;:20;328:2;-1:-1:-1;2210:46:53;;;;;;2272:30;;;-1:-1:-1;;;;;2272:30:53;;;;2297:4;2272:30;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2312:20:53;;;;;:8;:20;;;;;:27;;-1:-1:-1;;2312:27:53;2335:4;2312:27;;;;;;2349:13;27:10:-1;;23:18;;;45:23;;2349:30:53;;;;;;;-1:-1:-1;;;;;;2349:30:53;;;;;;2080:306::o;1060:188::-;452:5;;-1:-1:-1;;;;;452:5:53;438:10;:19;430:28;;;;;;-1:-1:-1;;;;;1136:22:53;;;;1128:31;;;;;;1195:12;;1174:34;;;-1:-1:-1;;;;;1195:12:53;;;1174:34;;;;;;;;;;;;1218:12;:23;;-1:-1:-1;;;;;;1218:23:53;-1:-1:-1;;;;;1218:23:53;;;;;;;;;;1060:188::o;1822:194::-;1869:12;;-1:-1:-1;;;;;1869:12:53;1885:10;1869:26;1861:35;;;;;;1924:12;;;1938:5;1911:33;;;-1:-1:-1;;;;;1924:12:53;;;1911:33;;1938:5;;;;1911:33;;;;;;;;;;;;;;;;1962:12;;;;1954:20;;-1:-1:-1;;;;;;1954:20:53;;;-1:-1:-1;;;;;1962:12:53;;1954:20;;;;1984:25;;;1822:194::o;1423:228::-;452:5;;-1:-1:-1;;;;;452:5:53;438:10;:19;430:28;;;;;;-1:-1:-1;;;;;1506:22:53;;;;1498:31;;;;;;1544:30;;;-1:-1:-1;;;;;1544:30:53;;;;;;;;;;;;;;;1612:5;;1589:29;;;-1:-1:-1;;;;;1589:29:53;;;;;1612:5;;;1589:29;;;;;;;;;;;;;;;;1628:5;:16;;-1:-1:-1;;;;;;1628:16:53;-1:-1:-1;;;;;1628:16:53;;;;;;;;;;1423:228::o;758:94::-;804:9;832:13;825:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;825:20:53;;;;;;;;;;;;;;;;;;;;;;758:94;:::o;2913:317::-;452:5;;-1:-1:-1;;;;;452:5:53;438:10;:19;430:28;;;;;;-1:-1:-1;;;;;2991:22:53;;;;;;:9;:22;;;;;;;;2990:23;2982:32;;;;;;3055:14;:21;328:2;-1:-1:-1;3047:47:53;;;;;;3110:32;;;-1:-1:-1;;;;;3110:32:53;;;;3137:4;3110:32;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3152:22:53;;;;;:9;:22;;;;;:29;;-1:-1:-1;;3152:29:53;3177:4;3152:29;;;;;;3191:14;27:10:-1;;23:18;;;45:23;;3191:32:53;;;;;;;-1:-1:-1;;;;;;3191:32:53;;;;;;2913:317::o;3236:474::-;3387:6;452:5;;-1:-1:-1;;;;;452:5:53;438:10;:19;430:28;;;;;;-1:-1:-1;;;;;3314:19:53;;;;;;:9;:19;;;;;;;;3306:28;;;;;;;;-1:-1:-1;;;;;;3344:19:53;;3366:5;3344:19;;;:9;:19;;;;;:27;;-1:-1:-1;;3344:27:53;;;3382:322;3403:14;:21;3399:25;;3382:322;;;3470:8;-1:-1:-1;;;;;3449:29:53;:14;3464:1;3449:17;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3449:17:53;:29;3445:249;;;3518:14;3533:21;;-1:-1:-1;;3533:25:53;;;3518:41;;;;;;;;;;;;;;;;3498:14;:17;;-1:-1:-1;;;;;3518:41:53;;;;3513:1;;3498:17;;;;;;;;;;;;;;;:61;;-1:-1:-1;;;;;;3498:61:53;-1:-1:-1;;;;;3498:61:53;;;;;;;;;;3577:14;:26;;-1:-1:-1;;3577:26:53;;;;;;:::i;:::-;-1:-1:-1;3626:30:53;;;-1:-1:-1;;;;;3626:30:53;;;;3650:5;3626:30;;;;;;;;;;;;;;;;;3674:5;;3445:249;3426:3;;3382:322;;859:155:61;452:5:53;;-1:-1:-1;;;;;452:5:53;438:10;:19;430:28;;;;;;940:23:61;;-1:-1:-1;;;;;940:15:61;;;:23;;;;;956:6;;940:23;;;;956:6;940:15;:23;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;978:29:61;;;;;;-1:-1:-1;;;;;978:29:61;;;;;;;;;;;;;;;;;;;859:155;;:::o;59:20:53:-;;;-1:-1:-1;;;;;59:20:53;;:::o;321:695:61:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.4.24;\n\nimport \"../interfaces/ERC20.sol\";\nimport \"./PermissionGroups.sol\";\n\n\n/**\n * @title Contracts that should be able to recover tokens or ethers\n * @author Ilan Doron\n * @dev This allows to recover any tokens or Ethers received in a contract.\n * This will prevent any accidental loss of tokens.\n */\ncontract Withdrawable is PermissionGroups {\n\n    event TokenWithdraw(ERC20 token, uint amount, address sendTo);\n\n    /**\n     * @dev Withdraw all ERC20 compatible tokens\n     * @param token ERC20 The address of the token contract\n     */\n    function withdrawToken(ERC20 token, uint amount, address sendTo) external onlyAdmin {\n        require(token.transfer(sendTo, amount));\n        emit TokenWithdraw(token, amount, sendTo);\n    }\n\n    event EtherWithdraw(uint amount, address sendTo);\n\n    /**\n     * @dev Withdraw Ethers\n     */\n    function withdrawEther(uint amount, address sendTo) external onlyAdmin {\n        sendTo.transfer(amount);\n        emit EtherWithdraw(amount, sendTo);\n    }\n}\n",
  "sourcePath": "/home/iamonuwa/Projects/MyBitFoundation/MyBit-Network.tech/contracts/kyber/Withdrawable.sol",
  "ast": {
    "absolutePath": "/home/iamonuwa/Projects/MyBitFoundation/MyBit-Network.tech/contracts/kyber/Withdrawable.sol",
    "exportedSymbols": {
      "Withdrawable": [
        21009
      ]
    },
    "id": 21010,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20943,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:61"
      },
      {
        "absolutePath": "/home/iamonuwa/Projects/MyBitFoundation/MyBit-Network.tech/contracts/interfaces/ERC20.sol",
        "file": "../interfaces/ERC20.sol",
        "id": 20944,
        "nodeType": "ImportDirective",
        "scope": 21010,
        "sourceUnit": 8638,
        "src": "26:33:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/iamonuwa/Projects/MyBitFoundation/MyBit-Network.tech/contracts/kyber/PermissionGroups.sol",
        "file": "./PermissionGroups.sol",
        "id": 20945,
        "nodeType": "ImportDirective",
        "scope": 21010,
        "sourceUnit": 19479,
        "src": "60:32:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20946,
              "name": "PermissionGroups",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19478,
              "src": "346:16:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PermissionGroups_$19478",
                "typeString": "contract PermissionGroups"
              }
            },
            "id": 20947,
            "nodeType": "InheritanceSpecifier",
            "src": "346:16:61"
          }
        ],
        "contractDependencies": [
          19478
        ],
        "contractKind": "contract",
        "documentation": "@title Contracts that should be able to recover tokens or ethers\n@author Ilan Doron\n@dev This allows to recover any tokens or Ethers received in a contract.\nThis will prevent any accidental loss of tokens.",
        "fullyImplemented": true,
        "id": 21009,
        "linearizedBaseContracts": [
          21009,
          19478
        ],
        "name": "Withdrawable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 20955,
            "name": "TokenWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20949,
                  "indexed": false,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 20955,
                  "src": "390:11:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$8637",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 20948,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8637,
                    "src": "390:5:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$8637",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20951,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 20955,
                  "src": "403:11:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20950,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:4:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20953,
                  "indexed": false,
                  "name": "sendTo",
                  "nodeType": "VariableDeclaration",
                  "scope": 20955,
                  "src": "416:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "416:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "389:42:61"
            },
            "src": "370:62:61"
          },
          {
            "body": {
              "id": 20980,
              "nodeType": "Block",
              "src": "647:107:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 20969,
                            "name": "sendTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20961,
                            "src": "680:6:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 20970,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20959,
                            "src": "688:6:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 20967,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20957,
                            "src": "665:5:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$8637",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 20968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8600,
                          "src": "665:14:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 20971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "665:30:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 20966,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        28651,
                        28652
                      ],
                      "referencedDeclaration": 28651,
                      "src": "657:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 20972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "657:39:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20973,
                  "nodeType": "ExpressionStatement",
                  "src": "657:39:61"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20975,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20957,
                        "src": "725:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$8637",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20976,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20959,
                        "src": "732:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20977,
                        "name": "sendTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20961,
                        "src": "740:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$8637",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 20974,
                      "name": "TokenWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20955,
                      "src": "711:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ERC20_$8637_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (contract ERC20,uint256,address)"
                      }
                    },
                    "id": 20978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "711:36:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20979,
                  "nodeType": "EmitStatement",
                  "src": "706:41:61"
                }
              ]
            },
            "documentation": "@dev Withdraw all ERC20 compatible tokens\n@param token ERC20 The address of the token contract",
            "id": 20981,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 20964,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 20963,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19133,
                  "src": "637:9:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "637:9:61"
              }
            ],
            "name": "withdrawToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20957,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 20981,
                  "src": "586:11:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$8637",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 20956,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8637,
                    "src": "586:5:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$8637",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20959,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 20981,
                  "src": "599:11:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20958,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:4:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20961,
                  "name": "sendTo",
                  "nodeType": "VariableDeclaration",
                  "scope": 20981,
                  "src": "612:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "612:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "585:42:61"
            },
            "payable": false,
            "returnParameters": {
              "id": 20965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "647:0:61"
            },
            "scope": 21009,
            "src": "563:191:61",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 20987,
            "name": "EtherWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20983,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 20987,
                  "src": "780:11:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20982,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:4:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20985,
                  "indexed": false,
                  "name": "sendTo",
                  "nodeType": "VariableDeclaration",
                  "scope": 20987,
                  "src": "793:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "779:29:61"
            },
            "src": "760:49:61"
          },
          {
            "body": {
              "id": 21007,
              "nodeType": "Block",
              "src": "930:84:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20999,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20989,
                        "src": "956:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 20996,
                        "name": "sendTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20991,
                        "src": "940:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 20998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "940:15:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 21000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "940:23:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21001,
                  "nodeType": "ExpressionStatement",
                  "src": "940:23:61"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21003,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20989,
                        "src": "992:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21004,
                        "name": "sendTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20991,
                        "src": "1000:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 21002,
                      "name": "EtherWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20987,
                      "src": "978:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 21005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "978:29:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21006,
                  "nodeType": "EmitStatement",
                  "src": "973:34:61"
                }
              ]
            },
            "documentation": "@dev Withdraw Ethers",
            "id": 21008,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 20994,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 20993,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19133,
                  "src": "920:9:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "920:9:61"
              }
            ],
            "name": "withdrawEther",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20989,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 21008,
                  "src": "882:11:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20988,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "882:4:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20991,
                  "name": "sendTo",
                  "nodeType": "VariableDeclaration",
                  "scope": 21008,
                  "src": "895:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "895:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "881:29:61"
            },
            "payable": false,
            "returnParameters": {
              "id": 20995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "930:0:61"
            },
            "scope": 21009,
            "src": "859:155:61",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 21010,
        "src": "321:695:61"
      }
    ],
    "src": "0:1017:61"
  },
  "legacyAST": {
    "absolutePath": "/home/iamonuwa/Projects/MyBitFoundation/MyBit-Network.tech/contracts/kyber/Withdrawable.sol",
    "exportedSymbols": {
      "Withdrawable": [
        21009
      ]
    },
    "id": 21010,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20943,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:61"
      },
      {
        "absolutePath": "/home/iamonuwa/Projects/MyBitFoundation/MyBit-Network.tech/contracts/interfaces/ERC20.sol",
        "file": "../interfaces/ERC20.sol",
        "id": 20944,
        "nodeType": "ImportDirective",
        "scope": 21010,
        "sourceUnit": 8638,
        "src": "26:33:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/iamonuwa/Projects/MyBitFoundation/MyBit-Network.tech/contracts/kyber/PermissionGroups.sol",
        "file": "./PermissionGroups.sol",
        "id": 20945,
        "nodeType": "ImportDirective",
        "scope": 21010,
        "sourceUnit": 19479,
        "src": "60:32:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20946,
              "name": "PermissionGroups",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19478,
              "src": "346:16:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PermissionGroups_$19478",
                "typeString": "contract PermissionGroups"
              }
            },
            "id": 20947,
            "nodeType": "InheritanceSpecifier",
            "src": "346:16:61"
          }
        ],
        "contractDependencies": [
          19478
        ],
        "contractKind": "contract",
        "documentation": "@title Contracts that should be able to recover tokens or ethers\n@author Ilan Doron\n@dev This allows to recover any tokens or Ethers received in a contract.\nThis will prevent any accidental loss of tokens.",
        "fullyImplemented": true,
        "id": 21009,
        "linearizedBaseContracts": [
          21009,
          19478
        ],
        "name": "Withdrawable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 20955,
            "name": "TokenWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20949,
                  "indexed": false,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 20955,
                  "src": "390:11:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$8637",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 20948,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8637,
                    "src": "390:5:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$8637",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20951,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 20955,
                  "src": "403:11:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20950,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:4:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20953,
                  "indexed": false,
                  "name": "sendTo",
                  "nodeType": "VariableDeclaration",
                  "scope": 20955,
                  "src": "416:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "416:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "389:42:61"
            },
            "src": "370:62:61"
          },
          {
            "body": {
              "id": 20980,
              "nodeType": "Block",
              "src": "647:107:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 20969,
                            "name": "sendTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20961,
                            "src": "680:6:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 20970,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20959,
                            "src": "688:6:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 20967,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20957,
                            "src": "665:5:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$8637",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 20968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8600,
                          "src": "665:14:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 20971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "665:30:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 20966,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        28651,
                        28652
                      ],
                      "referencedDeclaration": 28651,
                      "src": "657:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 20972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "657:39:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20973,
                  "nodeType": "ExpressionStatement",
                  "src": "657:39:61"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20975,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20957,
                        "src": "725:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$8637",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20976,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20959,
                        "src": "732:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20977,
                        "name": "sendTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20961,
                        "src": "740:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$8637",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 20974,
                      "name": "TokenWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20955,
                      "src": "711:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ERC20_$8637_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (contract ERC20,uint256,address)"
                      }
                    },
                    "id": 20978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "711:36:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20979,
                  "nodeType": "EmitStatement",
                  "src": "706:41:61"
                }
              ]
            },
            "documentation": "@dev Withdraw all ERC20 compatible tokens\n@param token ERC20 The address of the token contract",
            "id": 20981,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 20964,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 20963,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19133,
                  "src": "637:9:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "637:9:61"
              }
            ],
            "name": "withdrawToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20957,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 20981,
                  "src": "586:11:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$8637",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 20956,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8637,
                    "src": "586:5:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$8637",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20959,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 20981,
                  "src": "599:11:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20958,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:4:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20961,
                  "name": "sendTo",
                  "nodeType": "VariableDeclaration",
                  "scope": 20981,
                  "src": "612:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "612:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "585:42:61"
            },
            "payable": false,
            "returnParameters": {
              "id": 20965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "647:0:61"
            },
            "scope": 21009,
            "src": "563:191:61",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 20987,
            "name": "EtherWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20983,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 20987,
                  "src": "780:11:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20982,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:4:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20985,
                  "indexed": false,
                  "name": "sendTo",
                  "nodeType": "VariableDeclaration",
                  "scope": 20987,
                  "src": "793:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "779:29:61"
            },
            "src": "760:49:61"
          },
          {
            "body": {
              "id": 21007,
              "nodeType": "Block",
              "src": "930:84:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20999,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20989,
                        "src": "956:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 20996,
                        "name": "sendTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20991,
                        "src": "940:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 20998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "940:15:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 21000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "940:23:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21001,
                  "nodeType": "ExpressionStatement",
                  "src": "940:23:61"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21003,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20989,
                        "src": "992:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21004,
                        "name": "sendTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20991,
                        "src": "1000:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 21002,
                      "name": "EtherWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20987,
                      "src": "978:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 21005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "978:29:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21006,
                  "nodeType": "EmitStatement",
                  "src": "973:34:61"
                }
              ]
            },
            "documentation": "@dev Withdraw Ethers",
            "id": 21008,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 20994,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 20993,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19133,
                  "src": "920:9:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "920:9:61"
              }
            ],
            "name": "withdrawEther",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20989,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 21008,
                  "src": "882:11:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20988,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "882:4:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20991,
                  "name": "sendTo",
                  "nodeType": "VariableDeclaration",
                  "scope": 21008,
                  "src": "895:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "895:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "881:29:61"
            },
            "payable": false,
            "returnParameters": {
              "id": 20995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "930:0:61"
            },
            "scope": 21009,
            "src": "859:155:61",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 21010,
        "src": "321:695:61"
      }
    ],
    "src": "0:1017:61"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.9",
  "updatedAt": "2020-07-27T21:29:56.483Z",
  "devdoc": {
    "author": "Ilan Doron",
    "methods": {
      "claimAdmin()": {
        "details": "Allows the pendingAdmin address to finalize the change admin process."
      },
      "transferAdmin(address)": {
        "details": "Allows the current admin to set the pendingAdmin address.",
        "params": {
          "newAdmin": "The address to transfer ownership to."
        }
      },
      "transferAdminQuickly(address)": {
        "details": "Allows the current admin to set the admin in one tx. Useful initial deployment.",
        "params": {
          "newAdmin": "The address to transfer ownership to."
        }
      },
      "withdrawEther(uint256,address)": {
        "details": "Withdraw Ethers"
      },
      "withdrawToken(address,uint256,address)": {
        "details": "Withdraw all ERC20 compatible tokens",
        "params": {
          "token": "ERC20 The address of the token contract"
        }
      }
    },
    "title": "Contracts that should be able to recover tokens or ethers"
  },
  "userdoc": {
    "methods": {}
  }
}